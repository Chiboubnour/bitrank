

================================================================
== Vitis HLS Report for 'bitrank'
================================================================
* Date:           Thu Sep 19 15:41:00 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        bitrank
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.605 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        1|        1|  10.000 ns|  10.000 ns|    2|    2|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.60>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%pos_r_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %pos_r"   --->   Operation 3 'read' 'pos_r_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%p_val_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %p_val"   --->   Operation 4 'read' 'p_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns) (grouped into LUT with out node add_ln44)   --->   "%count = trunc i64 %p_val_read" [bitrank.cpp:44]   --->   Operation 5 'trunc' 'count' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns) (grouped into LUT with out node add_ln44)   --->   "%zext_ln41 = zext i1 %count" [bitrank.cpp:41]   --->   Operation 6 'zext' 'zext_ln41' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (1.82ns)   --->   "%icmp_ln44 = icmp_ne  i6 %pos_r_read, i6 0" [bitrank.cpp:44]   --->   Operation 7 'icmp' 'icmp_ln44' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 8 [1/1] (0.00ns) (grouped into LUT with out node add_ln44)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 1" [bitrank.cpp:44]   --->   Operation 8 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns) (grouped into LUT with out node add_ln44)   --->   "%and_ln44 = and i1 %icmp_ln44, i1 %tmp" [bitrank.cpp:44]   --->   Operation 9 'and' 'and_ln44' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (0.00ns) (grouped into LUT with out node add_ln44)   --->   "%zext_ln44 = zext i1 %and_ln44" [bitrank.cpp:44]   --->   Operation 10 'zext' 'zext_ln44' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i5 @_ssdm_op_PartSelect.i5.i6.i32.i32, i6 %pos_r_read, i32 1, i32 5" [bitrank.cpp:44]   --->   Operation 11 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.78ns)   --->   "%icmp_ln44_1 = icmp_ne  i5 %tmp_1, i5 0" [bitrank.cpp:44]   --->   Operation 12 'icmp' 'icmp_ln44_1' <Predicate = true> <Delay = 1.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_1)   --->   "%tmp_2 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 2" [bitrank.cpp:44]   --->   Operation 13 'bitselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_1)   --->   "%and_ln44_1 = and i1 %icmp_ln44_1, i1 %tmp_2" [bitrank.cpp:44]   --->   Operation 14 'and' 'and_ln44_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_1)   --->   "%zext_ln44_1 = zext i1 %and_ln44_1" [bitrank.cpp:44]   --->   Operation 15 'zext' 'zext_ln44_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.82ns)   --->   "%icmp_ln44_2 = icmp_ugt  i6 %pos_r_read, i6 2" [bitrank.cpp:44]   --->   Operation 16 'icmp' 'icmp_ln44_2' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_1)   --->   "%tmp_3 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 3" [bitrank.cpp:44]   --->   Operation 17 'bitselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_1)   --->   "%and_ln44_2 = and i1 %icmp_ln44_2, i1 %tmp_3" [bitrank.cpp:44]   --->   Operation 18 'and' 'and_ln44_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_1)   --->   "%zext_ln44_2 = zext i1 %and_ln44_2" [bitrank.cpp:44]   --->   Operation 19 'zext' 'zext_ln44_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i4 @_ssdm_op_PartSelect.i4.i6.i32.i32, i6 %pos_r_read, i32 2, i32 5" [bitrank.cpp:44]   --->   Operation 20 'partselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (1.73ns)   --->   "%icmp_ln44_3 = icmp_ne  i4 %tmp_4, i4 0" [bitrank.cpp:44]   --->   Operation 21 'icmp' 'icmp_ln44_3' <Predicate = true> <Delay = 1.73> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_3)   --->   "%tmp_5 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 4" [bitrank.cpp:44]   --->   Operation 22 'bitselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_3)   --->   "%and_ln44_3 = and i1 %icmp_ln44_3, i1 %tmp_5" [bitrank.cpp:44]   --->   Operation 23 'and' 'and_ln44_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_3)   --->   "%zext_ln44_3 = zext i1 %and_ln44_3" [bitrank.cpp:44]   --->   Operation 24 'zext' 'zext_ln44_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (1.82ns)   --->   "%icmp_ln44_4 = icmp_ugt  i6 %pos_r_read, i6 4" [bitrank.cpp:44]   --->   Operation 25 'icmp' 'icmp_ln44_4' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_3)   --->   "%tmp_6 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 5" [bitrank.cpp:44]   --->   Operation 26 'bitselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_3)   --->   "%and_ln44_4 = and i1 %icmp_ln44_4, i1 %tmp_6" [bitrank.cpp:44]   --->   Operation 27 'and' 'and_ln44_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_3)   --->   "%zext_ln44_4 = zext i1 %and_ln44_4" [bitrank.cpp:44]   --->   Operation 28 'zext' 'zext_ln44_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (1.82ns)   --->   "%icmp_ln44_5 = icmp_ugt  i6 %pos_r_read, i6 5" [bitrank.cpp:44]   --->   Operation 29 'icmp' 'icmp_ln44_5' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_4)   --->   "%tmp_7 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 6" [bitrank.cpp:44]   --->   Operation 30 'bitselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_4)   --->   "%and_ln44_5 = and i1 %icmp_ln44_5, i1 %tmp_7" [bitrank.cpp:44]   --->   Operation 31 'and' 'and_ln44_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_4)   --->   "%zext_ln44_5 = zext i1 %and_ln44_5" [bitrank.cpp:44]   --->   Operation 32 'zext' 'zext_ln44_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (1.82ns)   --->   "%icmp_ln44_6 = icmp_ugt  i6 %pos_r_read, i6 6" [bitrank.cpp:44]   --->   Operation 33 'icmp' 'icmp_ln44_6' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_4)   --->   "%tmp_8 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 7" [bitrank.cpp:44]   --->   Operation 34 'bitselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_4)   --->   "%and_ln44_6 = and i1 %icmp_ln44_6, i1 %tmp_8" [bitrank.cpp:44]   --->   Operation 35 'and' 'and_ln44_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_4)   --->   "%zext_ln44_6 = zext i1 %and_ln44_6" [bitrank.cpp:44]   --->   Operation 36 'zext' 'zext_ln44_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_9 = partselect i3 @_ssdm_op_PartSelect.i3.i6.i32.i32, i6 %pos_r_read, i32 3, i32 5" [bitrank.cpp:44]   --->   Operation 37 'partselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (1.65ns)   --->   "%icmp_ln44_7 = icmp_ne  i3 %tmp_9, i3 0" [bitrank.cpp:44]   --->   Operation 38 'icmp' 'icmp_ln44_7' <Predicate = true> <Delay = 1.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_7)   --->   "%tmp_10 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 8" [bitrank.cpp:44]   --->   Operation 39 'bitselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_7)   --->   "%and_ln44_7 = and i1 %icmp_ln44_7, i1 %tmp_10" [bitrank.cpp:44]   --->   Operation 40 'and' 'and_ln44_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_7)   --->   "%zext_ln44_7 = zext i1 %and_ln44_7" [bitrank.cpp:44]   --->   Operation 41 'zext' 'zext_ln44_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (1.82ns)   --->   "%icmp_ln44_8 = icmp_ugt  i6 %pos_r_read, i6 8" [bitrank.cpp:44]   --->   Operation 42 'icmp' 'icmp_ln44_8' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_7)   --->   "%tmp_11 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 9" [bitrank.cpp:44]   --->   Operation 43 'bitselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_7)   --->   "%and_ln44_8 = and i1 %icmp_ln44_8, i1 %tmp_11" [bitrank.cpp:44]   --->   Operation 44 'and' 'and_ln44_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_7)   --->   "%zext_ln44_8 = zext i1 %and_ln44_8" [bitrank.cpp:44]   --->   Operation 45 'zext' 'zext_ln44_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (1.82ns)   --->   "%icmp_ln44_9 = icmp_ugt  i6 %pos_r_read, i6 9" [bitrank.cpp:44]   --->   Operation 46 'icmp' 'icmp_ln44_9' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_8)   --->   "%tmp_12 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 10" [bitrank.cpp:44]   --->   Operation 47 'bitselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_8)   --->   "%and_ln44_9 = and i1 %icmp_ln44_9, i1 %tmp_12" [bitrank.cpp:44]   --->   Operation 48 'and' 'and_ln44_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_8)   --->   "%zext_ln44_9 = zext i1 %and_ln44_9" [bitrank.cpp:44]   --->   Operation 49 'zext' 'zext_ln44_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (1.82ns)   --->   "%icmp_ln44_10 = icmp_ugt  i6 %pos_r_read, i6 10" [bitrank.cpp:44]   --->   Operation 50 'icmp' 'icmp_ln44_10' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_8)   --->   "%tmp_13 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 11" [bitrank.cpp:44]   --->   Operation 51 'bitselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_8)   --->   "%and_ln44_10 = and i1 %icmp_ln44_10, i1 %tmp_13" [bitrank.cpp:44]   --->   Operation 52 'and' 'and_ln44_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_8)   --->   "%zext_ln44_10 = zext i1 %and_ln44_10" [bitrank.cpp:44]   --->   Operation 53 'zext' 'zext_ln44_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (1.82ns)   --->   "%icmp_ln44_11 = icmp_ugt  i6 %pos_r_read, i6 11" [bitrank.cpp:44]   --->   Operation 54 'icmp' 'icmp_ln44_11' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_10)   --->   "%tmp_14 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 12" [bitrank.cpp:44]   --->   Operation 55 'bitselect' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_10)   --->   "%and_ln44_11 = and i1 %icmp_ln44_11, i1 %tmp_14" [bitrank.cpp:44]   --->   Operation 56 'and' 'and_ln44_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_10)   --->   "%zext_ln44_11 = zext i1 %and_ln44_11" [bitrank.cpp:44]   --->   Operation 57 'zext' 'zext_ln44_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (1.82ns)   --->   "%icmp_ln44_12 = icmp_ugt  i6 %pos_r_read, i6 12" [bitrank.cpp:44]   --->   Operation 58 'icmp' 'icmp_ln44_12' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_10)   --->   "%tmp_15 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 13" [bitrank.cpp:44]   --->   Operation 59 'bitselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_10)   --->   "%and_ln44_12 = and i1 %icmp_ln44_12, i1 %tmp_15" [bitrank.cpp:44]   --->   Operation 60 'and' 'and_ln44_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_10)   --->   "%zext_ln44_12 = zext i1 %and_ln44_12" [bitrank.cpp:44]   --->   Operation 61 'zext' 'zext_ln44_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (1.82ns)   --->   "%icmp_ln44_13 = icmp_ugt  i6 %pos_r_read, i6 13" [bitrank.cpp:44]   --->   Operation 62 'icmp' 'icmp_ln44_13' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_11)   --->   "%tmp_16 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 14" [bitrank.cpp:44]   --->   Operation 63 'bitselect' 'tmp_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_11)   --->   "%and_ln44_13 = and i1 %icmp_ln44_13, i1 %tmp_16" [bitrank.cpp:44]   --->   Operation 64 'and' 'and_ln44_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_11)   --->   "%zext_ln44_13 = zext i1 %and_ln44_13" [bitrank.cpp:44]   --->   Operation 65 'zext' 'zext_ln44_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (1.82ns)   --->   "%icmp_ln44_14 = icmp_ugt  i6 %pos_r_read, i6 14" [bitrank.cpp:44]   --->   Operation 66 'icmp' 'icmp_ln44_14' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_11)   --->   "%tmp_17 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 15" [bitrank.cpp:44]   --->   Operation 67 'bitselect' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_11)   --->   "%and_ln44_14 = and i1 %icmp_ln44_14, i1 %tmp_17" [bitrank.cpp:44]   --->   Operation 68 'and' 'and_ln44_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_11)   --->   "%zext_ln44_14 = zext i1 %and_ln44_14" [bitrank.cpp:44]   --->   Operation 69 'zext' 'zext_ln44_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_18 = partselect i2 @_ssdm_op_PartSelect.i2.i6.i32.i32, i6 %pos_r_read, i32 4, i32 5" [bitrank.cpp:44]   --->   Operation 70 'partselect' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (1.56ns)   --->   "%icmp_ln44_15 = icmp_ne  i2 %tmp_18, i2 0" [bitrank.cpp:44]   --->   Operation 71 'icmp' 'icmp_ln44_15' <Predicate = true> <Delay = 1.56> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_15)   --->   "%tmp_19 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 16" [bitrank.cpp:44]   --->   Operation 72 'bitselect' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_15)   --->   "%and_ln44_15 = and i1 %icmp_ln44_15, i1 %tmp_19" [bitrank.cpp:44]   --->   Operation 73 'and' 'and_ln44_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_15)   --->   "%zext_ln44_15 = zext i1 %and_ln44_15" [bitrank.cpp:44]   --->   Operation 74 'zext' 'zext_ln44_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (1.82ns)   --->   "%icmp_ln44_16 = icmp_ugt  i6 %pos_r_read, i6 16" [bitrank.cpp:44]   --->   Operation 75 'icmp' 'icmp_ln44_16' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_15)   --->   "%tmp_20 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 17" [bitrank.cpp:44]   --->   Operation 76 'bitselect' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_15)   --->   "%and_ln44_16 = and i1 %icmp_ln44_16, i1 %tmp_20" [bitrank.cpp:44]   --->   Operation 77 'and' 'and_ln44_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_15)   --->   "%zext_ln44_16 = zext i1 %and_ln44_16" [bitrank.cpp:44]   --->   Operation 78 'zext' 'zext_ln44_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (1.82ns)   --->   "%icmp_ln44_17 = icmp_ugt  i6 %pos_r_read, i6 17" [bitrank.cpp:44]   --->   Operation 79 'icmp' 'icmp_ln44_17' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_16)   --->   "%tmp_21 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 18" [bitrank.cpp:44]   --->   Operation 80 'bitselect' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_16)   --->   "%and_ln44_17 = and i1 %icmp_ln44_17, i1 %tmp_21" [bitrank.cpp:44]   --->   Operation 81 'and' 'and_ln44_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_16)   --->   "%zext_ln44_17 = zext i1 %and_ln44_17" [bitrank.cpp:44]   --->   Operation 82 'zext' 'zext_ln44_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (1.82ns)   --->   "%icmp_ln44_18 = icmp_ugt  i6 %pos_r_read, i6 18" [bitrank.cpp:44]   --->   Operation 83 'icmp' 'icmp_ln44_18' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_16)   --->   "%tmp_22 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 19" [bitrank.cpp:44]   --->   Operation 84 'bitselect' 'tmp_22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_16)   --->   "%and_ln44_18 = and i1 %icmp_ln44_18, i1 %tmp_22" [bitrank.cpp:44]   --->   Operation 85 'and' 'and_ln44_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_16)   --->   "%zext_ln44_18 = zext i1 %and_ln44_18" [bitrank.cpp:44]   --->   Operation 86 'zext' 'zext_ln44_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (1.82ns)   --->   "%icmp_ln44_19 = icmp_ugt  i6 %pos_r_read, i6 19" [bitrank.cpp:44]   --->   Operation 87 'icmp' 'icmp_ln44_19' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_18)   --->   "%tmp_23 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 20" [bitrank.cpp:44]   --->   Operation 88 'bitselect' 'tmp_23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_18)   --->   "%and_ln44_19 = and i1 %icmp_ln44_19, i1 %tmp_23" [bitrank.cpp:44]   --->   Operation 89 'and' 'and_ln44_19' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_18)   --->   "%zext_ln44_19 = zext i1 %and_ln44_19" [bitrank.cpp:44]   --->   Operation 90 'zext' 'zext_ln44_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (1.82ns)   --->   "%icmp_ln44_20 = icmp_ugt  i6 %pos_r_read, i6 20" [bitrank.cpp:44]   --->   Operation 91 'icmp' 'icmp_ln44_20' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_18)   --->   "%tmp_24 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 21" [bitrank.cpp:44]   --->   Operation 92 'bitselect' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_18)   --->   "%and_ln44_20 = and i1 %icmp_ln44_20, i1 %tmp_24" [bitrank.cpp:44]   --->   Operation 93 'and' 'and_ln44_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_18)   --->   "%zext_ln44_20 = zext i1 %and_ln44_20" [bitrank.cpp:44]   --->   Operation 94 'zext' 'zext_ln44_20' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 95 [1/1] (1.82ns)   --->   "%icmp_ln44_21 = icmp_ugt  i6 %pos_r_read, i6 21" [bitrank.cpp:44]   --->   Operation 95 'icmp' 'icmp_ln44_21' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_19)   --->   "%tmp_25 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 22" [bitrank.cpp:44]   --->   Operation 96 'bitselect' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_19)   --->   "%and_ln44_21 = and i1 %icmp_ln44_21, i1 %tmp_25" [bitrank.cpp:44]   --->   Operation 97 'and' 'and_ln44_21' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_19)   --->   "%zext_ln44_21 = zext i1 %and_ln44_21" [bitrank.cpp:44]   --->   Operation 98 'zext' 'zext_ln44_21' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 99 [1/1] (1.82ns)   --->   "%icmp_ln44_22 = icmp_ugt  i6 %pos_r_read, i6 22" [bitrank.cpp:44]   --->   Operation 99 'icmp' 'icmp_ln44_22' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_19)   --->   "%tmp_26 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 23" [bitrank.cpp:44]   --->   Operation 100 'bitselect' 'tmp_26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_19)   --->   "%and_ln44_22 = and i1 %icmp_ln44_22, i1 %tmp_26" [bitrank.cpp:44]   --->   Operation 101 'and' 'and_ln44_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_19)   --->   "%zext_ln44_22 = zext i1 %and_ln44_22" [bitrank.cpp:44]   --->   Operation 102 'zext' 'zext_ln44_22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 103 [1/1] (1.82ns)   --->   "%icmp_ln44_23 = icmp_ugt  i6 %pos_r_read, i6 23" [bitrank.cpp:44]   --->   Operation 103 'icmp' 'icmp_ln44_23' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_22)   --->   "%tmp_27 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 24" [bitrank.cpp:44]   --->   Operation 104 'bitselect' 'tmp_27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_22)   --->   "%and_ln44_23 = and i1 %icmp_ln44_23, i1 %tmp_27" [bitrank.cpp:44]   --->   Operation 105 'and' 'and_ln44_23' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_22)   --->   "%zext_ln44_23 = zext i1 %and_ln44_23" [bitrank.cpp:44]   --->   Operation 106 'zext' 'zext_ln44_23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 107 [1/1] (1.82ns)   --->   "%icmp_ln44_24 = icmp_ugt  i6 %pos_r_read, i6 24" [bitrank.cpp:44]   --->   Operation 107 'icmp' 'icmp_ln44_24' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_22)   --->   "%tmp_28 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 25" [bitrank.cpp:44]   --->   Operation 108 'bitselect' 'tmp_28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_22)   --->   "%and_ln44_24 = and i1 %icmp_ln44_24, i1 %tmp_28" [bitrank.cpp:44]   --->   Operation 109 'and' 'and_ln44_24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_22)   --->   "%zext_ln44_24 = zext i1 %and_ln44_24" [bitrank.cpp:44]   --->   Operation 110 'zext' 'zext_ln44_24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 111 [1/1] (1.82ns)   --->   "%icmp_ln44_25 = icmp_ugt  i6 %pos_r_read, i6 25" [bitrank.cpp:44]   --->   Operation 111 'icmp' 'icmp_ln44_25' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_23)   --->   "%tmp_29 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 26" [bitrank.cpp:44]   --->   Operation 112 'bitselect' 'tmp_29' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_23)   --->   "%and_ln44_25 = and i1 %icmp_ln44_25, i1 %tmp_29" [bitrank.cpp:44]   --->   Operation 113 'and' 'and_ln44_25' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_23)   --->   "%zext_ln44_25 = zext i1 %and_ln44_25" [bitrank.cpp:44]   --->   Operation 114 'zext' 'zext_ln44_25' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 115 [1/1] (1.82ns)   --->   "%icmp_ln44_26 = icmp_ugt  i6 %pos_r_read, i6 26" [bitrank.cpp:44]   --->   Operation 115 'icmp' 'icmp_ln44_26' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_23)   --->   "%tmp_30 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 27" [bitrank.cpp:44]   --->   Operation 116 'bitselect' 'tmp_30' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_23)   --->   "%and_ln44_26 = and i1 %icmp_ln44_26, i1 %tmp_30" [bitrank.cpp:44]   --->   Operation 117 'and' 'and_ln44_26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_23)   --->   "%zext_ln44_26 = zext i1 %and_ln44_26" [bitrank.cpp:44]   --->   Operation 118 'zext' 'zext_ln44_26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 119 [1/1] (1.82ns)   --->   "%icmp_ln44_27 = icmp_ugt  i6 %pos_r_read, i6 27" [bitrank.cpp:44]   --->   Operation 119 'icmp' 'icmp_ln44_27' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_25)   --->   "%tmp_31 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 28" [bitrank.cpp:44]   --->   Operation 120 'bitselect' 'tmp_31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_25)   --->   "%and_ln44_27 = and i1 %icmp_ln44_27, i1 %tmp_31" [bitrank.cpp:44]   --->   Operation 121 'and' 'and_ln44_27' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_25)   --->   "%zext_ln44_27 = zext i1 %and_ln44_27" [bitrank.cpp:44]   --->   Operation 122 'zext' 'zext_ln44_27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 123 [1/1] (1.82ns)   --->   "%icmp_ln44_28 = icmp_ugt  i6 %pos_r_read, i6 28" [bitrank.cpp:44]   --->   Operation 123 'icmp' 'icmp_ln44_28' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_25)   --->   "%tmp_32 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 29" [bitrank.cpp:44]   --->   Operation 124 'bitselect' 'tmp_32' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_25)   --->   "%and_ln44_28 = and i1 %icmp_ln44_28, i1 %tmp_32" [bitrank.cpp:44]   --->   Operation 125 'and' 'and_ln44_28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_25)   --->   "%zext_ln44_28 = zext i1 %and_ln44_28" [bitrank.cpp:44]   --->   Operation 126 'zext' 'zext_ln44_28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 127 [1/1] (1.82ns)   --->   "%icmp_ln44_29 = icmp_ugt  i6 %pos_r_read, i6 29" [bitrank.cpp:44]   --->   Operation 127 'icmp' 'icmp_ln44_29' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_26)   --->   "%tmp_33 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 30" [bitrank.cpp:44]   --->   Operation 128 'bitselect' 'tmp_33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_26)   --->   "%and_ln44_29 = and i1 %icmp_ln44_29, i1 %tmp_33" [bitrank.cpp:44]   --->   Operation 129 'and' 'and_ln44_29' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_26)   --->   "%zext_ln44_29 = zext i1 %and_ln44_29" [bitrank.cpp:44]   --->   Operation 130 'zext' 'zext_ln44_29' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 131 [1/1] (1.82ns)   --->   "%icmp_ln44_30 = icmp_ugt  i6 %pos_r_read, i6 30" [bitrank.cpp:44]   --->   Operation 131 'icmp' 'icmp_ln44_30' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_26)   --->   "%tmp_34 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 31" [bitrank.cpp:44]   --->   Operation 132 'bitselect' 'tmp_34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_26)   --->   "%and_ln44_30 = and i1 %icmp_ln44_30, i1 %tmp_34" [bitrank.cpp:44]   --->   Operation 133 'and' 'and_ln44_30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_26)   --->   "%zext_ln44_30 = zext i1 %and_ln44_30" [bitrank.cpp:44]   --->   Operation 134 'zext' 'zext_ln44_30' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_31)   --->   "%tmp_35 = bitselect i1 @_ssdm_op_BitSelect.i1.i6.i32, i6 %pos_r_read, i32 5" [bitrank.cpp:44]   --->   Operation 135 'bitselect' 'tmp_35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_31)   --->   "%tmp_36 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 32" [bitrank.cpp:44]   --->   Operation 136 'bitselect' 'tmp_36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_31)   --->   "%and_ln44_31 = and i1 %tmp_35, i1 %tmp_36" [bitrank.cpp:44]   --->   Operation 137 'and' 'and_ln44_31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_31)   --->   "%zext_ln44_31 = zext i1 %and_ln44_31" [bitrank.cpp:44]   --->   Operation 138 'zext' 'zext_ln44_31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 139 [1/1] (1.82ns)   --->   "%icmp_ln44_31 = icmp_ugt  i6 %pos_r_read, i6 32" [bitrank.cpp:44]   --->   Operation 139 'icmp' 'icmp_ln44_31' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_31)   --->   "%tmp_37 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 33" [bitrank.cpp:44]   --->   Operation 140 'bitselect' 'tmp_37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_31)   --->   "%and_ln44_32 = and i1 %icmp_ln44_31, i1 %tmp_37" [bitrank.cpp:44]   --->   Operation 141 'and' 'and_ln44_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_31)   --->   "%zext_ln44_32 = zext i1 %and_ln44_32" [bitrank.cpp:44]   --->   Operation 142 'zext' 'zext_ln44_32' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 143 [1/1] (1.82ns)   --->   "%icmp_ln44_32 = icmp_ugt  i6 %pos_r_read, i6 33" [bitrank.cpp:44]   --->   Operation 143 'icmp' 'icmp_ln44_32' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_32)   --->   "%tmp_38 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 34" [bitrank.cpp:44]   --->   Operation 144 'bitselect' 'tmp_38' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_32)   --->   "%and_ln44_33 = and i1 %icmp_ln44_32, i1 %tmp_38" [bitrank.cpp:44]   --->   Operation 145 'and' 'and_ln44_33' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_32)   --->   "%zext_ln44_33 = zext i1 %and_ln44_33" [bitrank.cpp:44]   --->   Operation 146 'zext' 'zext_ln44_33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 147 [1/1] (1.82ns)   --->   "%icmp_ln44_33 = icmp_ugt  i6 %pos_r_read, i6 34" [bitrank.cpp:44]   --->   Operation 147 'icmp' 'icmp_ln44_33' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_32)   --->   "%tmp_39 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 35" [bitrank.cpp:44]   --->   Operation 148 'bitselect' 'tmp_39' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_32)   --->   "%and_ln44_34 = and i1 %icmp_ln44_33, i1 %tmp_39" [bitrank.cpp:44]   --->   Operation 149 'and' 'and_ln44_34' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_32)   --->   "%zext_ln44_34 = zext i1 %and_ln44_34" [bitrank.cpp:44]   --->   Operation 150 'zext' 'zext_ln44_34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 151 [1/1] (1.82ns)   --->   "%icmp_ln44_34 = icmp_ugt  i6 %pos_r_read, i6 35" [bitrank.cpp:44]   --->   Operation 151 'icmp' 'icmp_ln44_34' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_34)   --->   "%tmp_40 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 36" [bitrank.cpp:44]   --->   Operation 152 'bitselect' 'tmp_40' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_34)   --->   "%and_ln44_35 = and i1 %icmp_ln44_34, i1 %tmp_40" [bitrank.cpp:44]   --->   Operation 153 'and' 'and_ln44_35' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_34)   --->   "%zext_ln44_35 = zext i1 %and_ln44_35" [bitrank.cpp:44]   --->   Operation 154 'zext' 'zext_ln44_35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 155 [1/1] (1.82ns)   --->   "%icmp_ln44_35 = icmp_ugt  i6 %pos_r_read, i6 36" [bitrank.cpp:44]   --->   Operation 155 'icmp' 'icmp_ln44_35' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_34)   --->   "%tmp_41 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 37" [bitrank.cpp:44]   --->   Operation 156 'bitselect' 'tmp_41' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_34)   --->   "%and_ln44_36 = and i1 %icmp_ln44_35, i1 %tmp_41" [bitrank.cpp:44]   --->   Operation 157 'and' 'and_ln44_36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_34)   --->   "%zext_ln44_36 = zext i1 %and_ln44_36" [bitrank.cpp:44]   --->   Operation 158 'zext' 'zext_ln44_36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 159 [1/1] (1.82ns)   --->   "%icmp_ln44_36 = icmp_ugt  i6 %pos_r_read, i6 37" [bitrank.cpp:44]   --->   Operation 159 'icmp' 'icmp_ln44_36' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_35)   --->   "%tmp_42 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 38" [bitrank.cpp:44]   --->   Operation 160 'bitselect' 'tmp_42' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_35)   --->   "%and_ln44_37 = and i1 %icmp_ln44_36, i1 %tmp_42" [bitrank.cpp:44]   --->   Operation 161 'and' 'and_ln44_37' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_35)   --->   "%zext_ln44_37 = zext i1 %and_ln44_37" [bitrank.cpp:44]   --->   Operation 162 'zext' 'zext_ln44_37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 163 [1/1] (1.82ns)   --->   "%icmp_ln44_37 = icmp_ugt  i6 %pos_r_read, i6 38" [bitrank.cpp:44]   --->   Operation 163 'icmp' 'icmp_ln44_37' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 164 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_35)   --->   "%tmp_43 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 39" [bitrank.cpp:44]   --->   Operation 164 'bitselect' 'tmp_43' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_35)   --->   "%and_ln44_38 = and i1 %icmp_ln44_37, i1 %tmp_43" [bitrank.cpp:44]   --->   Operation 165 'and' 'and_ln44_38' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_35)   --->   "%zext_ln44_38 = zext i1 %and_ln44_38" [bitrank.cpp:44]   --->   Operation 166 'zext' 'zext_ln44_38' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 167 [1/1] (1.82ns)   --->   "%icmp_ln44_38 = icmp_ugt  i6 %pos_r_read, i6 39" [bitrank.cpp:44]   --->   Operation 167 'icmp' 'icmp_ln44_38' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_38)   --->   "%tmp_44 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 40" [bitrank.cpp:44]   --->   Operation 168 'bitselect' 'tmp_44' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_38)   --->   "%and_ln44_39 = and i1 %icmp_ln44_38, i1 %tmp_44" [bitrank.cpp:44]   --->   Operation 169 'and' 'and_ln44_39' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_38)   --->   "%zext_ln44_39 = zext i1 %and_ln44_39" [bitrank.cpp:44]   --->   Operation 170 'zext' 'zext_ln44_39' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 171 [1/1] (1.82ns)   --->   "%icmp_ln44_39 = icmp_ugt  i6 %pos_r_read, i6 40" [bitrank.cpp:44]   --->   Operation 171 'icmp' 'icmp_ln44_39' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_38)   --->   "%tmp_45 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 41" [bitrank.cpp:44]   --->   Operation 172 'bitselect' 'tmp_45' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 173 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_38)   --->   "%and_ln44_40 = and i1 %icmp_ln44_39, i1 %tmp_45" [bitrank.cpp:44]   --->   Operation 173 'and' 'and_ln44_40' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 174 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_38)   --->   "%zext_ln44_40 = zext i1 %and_ln44_40" [bitrank.cpp:44]   --->   Operation 174 'zext' 'zext_ln44_40' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 175 [1/1] (1.82ns)   --->   "%icmp_ln44_40 = icmp_ugt  i6 %pos_r_read, i6 41" [bitrank.cpp:44]   --->   Operation 175 'icmp' 'icmp_ln44_40' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 176 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_39)   --->   "%tmp_46 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 42" [bitrank.cpp:44]   --->   Operation 176 'bitselect' 'tmp_46' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 177 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_39)   --->   "%and_ln44_41 = and i1 %icmp_ln44_40, i1 %tmp_46" [bitrank.cpp:44]   --->   Operation 177 'and' 'and_ln44_41' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 178 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_39)   --->   "%zext_ln44_41 = zext i1 %and_ln44_41" [bitrank.cpp:44]   --->   Operation 178 'zext' 'zext_ln44_41' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 179 [1/1] (1.82ns)   --->   "%icmp_ln44_41 = icmp_ugt  i6 %pos_r_read, i6 42" [bitrank.cpp:44]   --->   Operation 179 'icmp' 'icmp_ln44_41' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 180 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_39)   --->   "%tmp_47 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 43" [bitrank.cpp:44]   --->   Operation 180 'bitselect' 'tmp_47' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 181 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_39)   --->   "%and_ln44_42 = and i1 %icmp_ln44_41, i1 %tmp_47" [bitrank.cpp:44]   --->   Operation 181 'and' 'and_ln44_42' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 182 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_39)   --->   "%zext_ln44_42 = zext i1 %and_ln44_42" [bitrank.cpp:44]   --->   Operation 182 'zext' 'zext_ln44_42' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 183 [1/1] (1.82ns)   --->   "%icmp_ln44_42 = icmp_ugt  i6 %pos_r_read, i6 43" [bitrank.cpp:44]   --->   Operation 183 'icmp' 'icmp_ln44_42' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 184 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_41)   --->   "%tmp_48 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 44" [bitrank.cpp:44]   --->   Operation 184 'bitselect' 'tmp_48' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 185 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_41)   --->   "%and_ln44_43 = and i1 %icmp_ln44_42, i1 %tmp_48" [bitrank.cpp:44]   --->   Operation 185 'and' 'and_ln44_43' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 186 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_41)   --->   "%zext_ln44_43 = zext i1 %and_ln44_43" [bitrank.cpp:44]   --->   Operation 186 'zext' 'zext_ln44_43' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 187 [1/1] (1.82ns)   --->   "%icmp_ln44_43 = icmp_ugt  i6 %pos_r_read, i6 44" [bitrank.cpp:44]   --->   Operation 187 'icmp' 'icmp_ln44_43' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 188 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_41)   --->   "%tmp_49 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 45" [bitrank.cpp:44]   --->   Operation 188 'bitselect' 'tmp_49' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 189 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_41)   --->   "%and_ln44_44 = and i1 %icmp_ln44_43, i1 %tmp_49" [bitrank.cpp:44]   --->   Operation 189 'and' 'and_ln44_44' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 190 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_41)   --->   "%zext_ln44_44 = zext i1 %and_ln44_44" [bitrank.cpp:44]   --->   Operation 190 'zext' 'zext_ln44_44' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 191 [1/1] (1.82ns)   --->   "%icmp_ln44_44 = icmp_ugt  i6 %pos_r_read, i6 45" [bitrank.cpp:44]   --->   Operation 191 'icmp' 'icmp_ln44_44' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 192 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_42)   --->   "%tmp_50 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 46" [bitrank.cpp:44]   --->   Operation 192 'bitselect' 'tmp_50' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 193 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_42)   --->   "%and_ln44_45 = and i1 %icmp_ln44_44, i1 %tmp_50" [bitrank.cpp:44]   --->   Operation 193 'and' 'and_ln44_45' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 194 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_42)   --->   "%zext_ln44_45 = zext i1 %and_ln44_45" [bitrank.cpp:44]   --->   Operation 194 'zext' 'zext_ln44_45' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 195 [1/1] (1.82ns)   --->   "%icmp_ln44_45 = icmp_ugt  i6 %pos_r_read, i6 46" [bitrank.cpp:44]   --->   Operation 195 'icmp' 'icmp_ln44_45' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 196 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_42)   --->   "%tmp_51 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 47" [bitrank.cpp:44]   --->   Operation 196 'bitselect' 'tmp_51' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 197 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_42)   --->   "%and_ln44_46 = and i1 %icmp_ln44_45, i1 %tmp_51" [bitrank.cpp:44]   --->   Operation 197 'and' 'and_ln44_46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 198 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_42)   --->   "%zext_ln44_46 = zext i1 %and_ln44_46" [bitrank.cpp:44]   --->   Operation 198 'zext' 'zext_ln44_46' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 199 [1/1] (1.82ns)   --->   "%icmp_ln44_46 = icmp_ugt  i6 %pos_r_read, i6 47" [bitrank.cpp:44]   --->   Operation 199 'icmp' 'icmp_ln44_46' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 200 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_46)   --->   "%tmp_52 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 48" [bitrank.cpp:44]   --->   Operation 200 'bitselect' 'tmp_52' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 201 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_46)   --->   "%and_ln44_47 = and i1 %icmp_ln44_46, i1 %tmp_52" [bitrank.cpp:44]   --->   Operation 201 'and' 'and_ln44_47' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_46)   --->   "%zext_ln44_47 = zext i1 %and_ln44_47" [bitrank.cpp:44]   --->   Operation 202 'zext' 'zext_ln44_47' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 203 [1/1] (1.82ns)   --->   "%icmp_ln44_47 = icmp_ugt  i6 %pos_r_read, i6 48" [bitrank.cpp:44]   --->   Operation 203 'icmp' 'icmp_ln44_47' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_46)   --->   "%tmp_53 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 49" [bitrank.cpp:44]   --->   Operation 204 'bitselect' 'tmp_53' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 205 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_46)   --->   "%and_ln44_48 = and i1 %icmp_ln44_47, i1 %tmp_53" [bitrank.cpp:44]   --->   Operation 205 'and' 'and_ln44_48' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 206 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_46)   --->   "%zext_ln44_48 = zext i1 %and_ln44_48" [bitrank.cpp:44]   --->   Operation 206 'zext' 'zext_ln44_48' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 207 [1/1] (1.82ns)   --->   "%icmp_ln44_48 = icmp_ugt  i6 %pos_r_read, i6 49" [bitrank.cpp:44]   --->   Operation 207 'icmp' 'icmp_ln44_48' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 208 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_47)   --->   "%tmp_54 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 50" [bitrank.cpp:44]   --->   Operation 208 'bitselect' 'tmp_54' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 209 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_47)   --->   "%and_ln44_49 = and i1 %icmp_ln44_48, i1 %tmp_54" [bitrank.cpp:44]   --->   Operation 209 'and' 'and_ln44_49' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 210 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_47)   --->   "%zext_ln44_49 = zext i1 %and_ln44_49" [bitrank.cpp:44]   --->   Operation 210 'zext' 'zext_ln44_49' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 211 [1/1] (1.82ns)   --->   "%icmp_ln44_49 = icmp_ugt  i6 %pos_r_read, i6 50" [bitrank.cpp:44]   --->   Operation 211 'icmp' 'icmp_ln44_49' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 212 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_47)   --->   "%tmp_55 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 51" [bitrank.cpp:44]   --->   Operation 212 'bitselect' 'tmp_55' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 213 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_47)   --->   "%and_ln44_50 = and i1 %icmp_ln44_49, i1 %tmp_55" [bitrank.cpp:44]   --->   Operation 213 'and' 'and_ln44_50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 214 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_47)   --->   "%zext_ln44_50 = zext i1 %and_ln44_50" [bitrank.cpp:44]   --->   Operation 214 'zext' 'zext_ln44_50' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 215 [1/1] (1.82ns)   --->   "%icmp_ln44_50 = icmp_ugt  i6 %pos_r_read, i6 51" [bitrank.cpp:44]   --->   Operation 215 'icmp' 'icmp_ln44_50' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 216 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_49)   --->   "%tmp_56 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 52" [bitrank.cpp:44]   --->   Operation 216 'bitselect' 'tmp_56' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 217 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_49)   --->   "%and_ln44_51 = and i1 %icmp_ln44_50, i1 %tmp_56" [bitrank.cpp:44]   --->   Operation 217 'and' 'and_ln44_51' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 218 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_49)   --->   "%zext_ln44_51 = zext i1 %and_ln44_51" [bitrank.cpp:44]   --->   Operation 218 'zext' 'zext_ln44_51' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 219 [1/1] (1.82ns)   --->   "%icmp_ln44_51 = icmp_ugt  i6 %pos_r_read, i6 52" [bitrank.cpp:44]   --->   Operation 219 'icmp' 'icmp_ln44_51' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 220 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_49)   --->   "%tmp_57 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 53" [bitrank.cpp:44]   --->   Operation 220 'bitselect' 'tmp_57' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 221 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_49)   --->   "%and_ln44_52 = and i1 %icmp_ln44_51, i1 %tmp_57" [bitrank.cpp:44]   --->   Operation 221 'and' 'and_ln44_52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 222 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_49)   --->   "%zext_ln44_52 = zext i1 %and_ln44_52" [bitrank.cpp:44]   --->   Operation 222 'zext' 'zext_ln44_52' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 223 [1/1] (1.82ns)   --->   "%icmp_ln44_52 = icmp_ugt  i6 %pos_r_read, i6 53" [bitrank.cpp:44]   --->   Operation 223 'icmp' 'icmp_ln44_52' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 224 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_50)   --->   "%tmp_58 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 54" [bitrank.cpp:44]   --->   Operation 224 'bitselect' 'tmp_58' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 225 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_50)   --->   "%and_ln44_53 = and i1 %icmp_ln44_52, i1 %tmp_58" [bitrank.cpp:44]   --->   Operation 225 'and' 'and_ln44_53' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 226 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_50)   --->   "%zext_ln44_53 = zext i1 %and_ln44_53" [bitrank.cpp:44]   --->   Operation 226 'zext' 'zext_ln44_53' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 227 [1/1] (1.82ns)   --->   "%icmp_ln44_53 = icmp_ugt  i6 %pos_r_read, i6 54" [bitrank.cpp:44]   --->   Operation 227 'icmp' 'icmp_ln44_53' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 228 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_50)   --->   "%tmp_59 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 55" [bitrank.cpp:44]   --->   Operation 228 'bitselect' 'tmp_59' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 229 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_50)   --->   "%and_ln44_54 = and i1 %icmp_ln44_53, i1 %tmp_59" [bitrank.cpp:44]   --->   Operation 229 'and' 'and_ln44_54' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 230 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_50)   --->   "%zext_ln44_54 = zext i1 %and_ln44_54" [bitrank.cpp:44]   --->   Operation 230 'zext' 'zext_ln44_54' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 231 [1/1] (1.82ns)   --->   "%icmp_ln44_54 = icmp_ugt  i6 %pos_r_read, i6 55" [bitrank.cpp:44]   --->   Operation 231 'icmp' 'icmp_ln44_54' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 232 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_53)   --->   "%tmp_60 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 56" [bitrank.cpp:44]   --->   Operation 232 'bitselect' 'tmp_60' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 233 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_53)   --->   "%and_ln44_55 = and i1 %icmp_ln44_54, i1 %tmp_60" [bitrank.cpp:44]   --->   Operation 233 'and' 'and_ln44_55' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 234 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_53)   --->   "%zext_ln44_55 = zext i1 %and_ln44_55" [bitrank.cpp:44]   --->   Operation 234 'zext' 'zext_ln44_55' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 235 [1/1] (1.82ns)   --->   "%icmp_ln44_55 = icmp_ugt  i6 %pos_r_read, i6 56" [bitrank.cpp:44]   --->   Operation 235 'icmp' 'icmp_ln44_55' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 236 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_53)   --->   "%tmp_61 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 57" [bitrank.cpp:44]   --->   Operation 236 'bitselect' 'tmp_61' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 237 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_53)   --->   "%and_ln44_56 = and i1 %icmp_ln44_55, i1 %tmp_61" [bitrank.cpp:44]   --->   Operation 237 'and' 'and_ln44_56' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 238 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_53)   --->   "%zext_ln44_56 = zext i1 %and_ln44_56" [bitrank.cpp:44]   --->   Operation 238 'zext' 'zext_ln44_56' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 239 [1/1] (1.82ns)   --->   "%icmp_ln44_56 = icmp_ugt  i6 %pos_r_read, i6 57" [bitrank.cpp:44]   --->   Operation 239 'icmp' 'icmp_ln44_56' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 240 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_54)   --->   "%tmp_62 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 58" [bitrank.cpp:44]   --->   Operation 240 'bitselect' 'tmp_62' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 241 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_54)   --->   "%and_ln44_57 = and i1 %icmp_ln44_56, i1 %tmp_62" [bitrank.cpp:44]   --->   Operation 241 'and' 'and_ln44_57' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 242 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_54)   --->   "%zext_ln44_57 = zext i1 %and_ln44_57" [bitrank.cpp:44]   --->   Operation 242 'zext' 'zext_ln44_57' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 243 [1/1] (1.82ns)   --->   "%icmp_ln44_57 = icmp_ugt  i6 %pos_r_read, i6 58" [bitrank.cpp:44]   --->   Operation 243 'icmp' 'icmp_ln44_57' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 244 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_54)   --->   "%tmp_63 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 59" [bitrank.cpp:44]   --->   Operation 244 'bitselect' 'tmp_63' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 245 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_54)   --->   "%and_ln44_58 = and i1 %icmp_ln44_57, i1 %tmp_63" [bitrank.cpp:44]   --->   Operation 245 'and' 'and_ln44_58' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 246 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_54)   --->   "%zext_ln44_58 = zext i1 %and_ln44_58" [bitrank.cpp:44]   --->   Operation 246 'zext' 'zext_ln44_58' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 247 [1/1] (1.82ns)   --->   "%icmp_ln44_58 = icmp_ugt  i6 %pos_r_read, i6 59" [bitrank.cpp:44]   --->   Operation 247 'icmp' 'icmp_ln44_58' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 248 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_56)   --->   "%tmp_64 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 60" [bitrank.cpp:44]   --->   Operation 248 'bitselect' 'tmp_64' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 249 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_56)   --->   "%and_ln44_59 = and i1 %icmp_ln44_58, i1 %tmp_64" [bitrank.cpp:44]   --->   Operation 249 'and' 'and_ln44_59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 250 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_56)   --->   "%zext_ln44_59 = zext i1 %and_ln44_59" [bitrank.cpp:44]   --->   Operation 250 'zext' 'zext_ln44_59' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 251 [1/1] (1.82ns)   --->   "%icmp_ln44_59 = icmp_ugt  i6 %pos_r_read, i6 60" [bitrank.cpp:44]   --->   Operation 251 'icmp' 'icmp_ln44_59' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 252 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_56)   --->   "%tmp_65 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 61" [bitrank.cpp:44]   --->   Operation 252 'bitselect' 'tmp_65' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 253 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_56)   --->   "%and_ln44_60 = and i1 %icmp_ln44_59, i1 %tmp_65" [bitrank.cpp:44]   --->   Operation 253 'and' 'and_ln44_60' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 254 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_56)   --->   "%zext_ln44_60 = zext i1 %and_ln44_60" [bitrank.cpp:44]   --->   Operation 254 'zext' 'zext_ln44_60' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 255 [1/1] (1.82ns)   --->   "%icmp_ln44_60 = icmp_ugt  i6 %pos_r_read, i6 61" [bitrank.cpp:44]   --->   Operation 255 'icmp' 'icmp_ln44_60' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 256 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_57)   --->   "%tmp_66 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 62" [bitrank.cpp:44]   --->   Operation 256 'bitselect' 'tmp_66' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 257 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_57)   --->   "%and_ln44_61 = and i1 %icmp_ln44_60, i1 %tmp_66" [bitrank.cpp:44]   --->   Operation 257 'and' 'and_ln44_61' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 258 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_57)   --->   "%zext_ln44_61 = zext i1 %and_ln44_61" [bitrank.cpp:44]   --->   Operation 258 'zext' 'zext_ln44_61' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 259 [1/1] (1.82ns)   --->   "%icmp_ln44_61 = icmp_eq  i6 %pos_r_read, i6 63" [bitrank.cpp:44]   --->   Operation 259 'icmp' 'icmp_ln44_61' <Predicate = true> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 260 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_57)   --->   "%tmp_67 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %p_val_read, i32 63" [bitrank.cpp:44]   --->   Operation 260 'bitselect' 'tmp_67' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 261 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_57)   --->   "%and_ln44_62 = and i1 %icmp_ln44_61, i1 %tmp_67" [bitrank.cpp:44]   --->   Operation 261 'and' 'and_ln44_62' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 262 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_57)   --->   "%zext_ln44_62 = zext i1 %and_ln44_62" [bitrank.cpp:44]   --->   Operation 262 'zext' 'zext_ln44_62' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 263 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44 = add i2 %zext_ln41, i2 %zext_ln44" [bitrank.cpp:44]   --->   Operation 263 'add' 'add_ln44' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 264 [1/1] (0.00ns)   --->   "%zext_ln44_63 = zext i2 %add_ln44" [bitrank.cpp:44]   --->   Operation 264 'zext' 'zext_ln44_63' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 265 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_1 = add i2 %zext_ln44_1, i2 %zext_ln44_2" [bitrank.cpp:44]   --->   Operation 265 'add' 'add_ln44_1' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 266 [1/1] (0.00ns)   --->   "%zext_ln44_64 = zext i2 %add_ln44_1" [bitrank.cpp:44]   --->   Operation 266 'zext' 'zext_ln44_64' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 267 [1/1] (1.56ns)   --->   "%add_ln44_2 = add i3 %zext_ln44_64, i3 %zext_ln44_63" [bitrank.cpp:44]   --->   Operation 267 'add' 'add_ln44_2' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 268 [1/1] (0.00ns)   --->   "%zext_ln44_65 = zext i3 %add_ln44_2" [bitrank.cpp:44]   --->   Operation 268 'zext' 'zext_ln44_65' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 269 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_3 = add i2 %zext_ln44_3, i2 %zext_ln44_4" [bitrank.cpp:44]   --->   Operation 269 'add' 'add_ln44_3' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 270 [1/1] (0.00ns)   --->   "%zext_ln44_66 = zext i2 %add_ln44_3" [bitrank.cpp:44]   --->   Operation 270 'zext' 'zext_ln44_66' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 271 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_4 = add i2 %zext_ln44_5, i2 %zext_ln44_6" [bitrank.cpp:44]   --->   Operation 271 'add' 'add_ln44_4' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 272 [1/1] (0.00ns)   --->   "%zext_ln44_67 = zext i2 %add_ln44_4" [bitrank.cpp:44]   --->   Operation 272 'zext' 'zext_ln44_67' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 273 [1/1] (1.56ns)   --->   "%add_ln44_5 = add i3 %zext_ln44_67, i3 %zext_ln44_66" [bitrank.cpp:44]   --->   Operation 273 'add' 'add_ln44_5' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 274 [1/1] (0.00ns)   --->   "%zext_ln44_68 = zext i3 %add_ln44_5" [bitrank.cpp:44]   --->   Operation 274 'zext' 'zext_ln44_68' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 275 [1/1] (1.65ns)   --->   "%add_ln44_6 = add i4 %zext_ln44_68, i4 %zext_ln44_65" [bitrank.cpp:44]   --->   Operation 275 'add' 'add_ln44_6' <Predicate = true> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 276 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_7 = add i2 %zext_ln44_7, i2 %zext_ln44_8" [bitrank.cpp:44]   --->   Operation 276 'add' 'add_ln44_7' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 277 [1/1] (0.00ns)   --->   "%zext_ln44_70 = zext i2 %add_ln44_7" [bitrank.cpp:44]   --->   Operation 277 'zext' 'zext_ln44_70' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 278 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_8 = add i2 %zext_ln44_9, i2 %zext_ln44_10" [bitrank.cpp:44]   --->   Operation 278 'add' 'add_ln44_8' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 279 [1/1] (0.00ns)   --->   "%zext_ln44_71 = zext i2 %add_ln44_8" [bitrank.cpp:44]   --->   Operation 279 'zext' 'zext_ln44_71' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 280 [1/1] (1.56ns)   --->   "%add_ln44_9 = add i3 %zext_ln44_71, i3 %zext_ln44_70" [bitrank.cpp:44]   --->   Operation 280 'add' 'add_ln44_9' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 281 [1/1] (0.00ns)   --->   "%zext_ln44_72 = zext i3 %add_ln44_9" [bitrank.cpp:44]   --->   Operation 281 'zext' 'zext_ln44_72' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 282 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_10 = add i2 %zext_ln44_11, i2 %zext_ln44_12" [bitrank.cpp:44]   --->   Operation 282 'add' 'add_ln44_10' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 283 [1/1] (0.00ns)   --->   "%zext_ln44_73 = zext i2 %add_ln44_10" [bitrank.cpp:44]   --->   Operation 283 'zext' 'zext_ln44_73' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 284 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_11 = add i2 %zext_ln44_13, i2 %zext_ln44_14" [bitrank.cpp:44]   --->   Operation 284 'add' 'add_ln44_11' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 285 [1/1] (0.00ns)   --->   "%zext_ln44_74 = zext i2 %add_ln44_11" [bitrank.cpp:44]   --->   Operation 285 'zext' 'zext_ln44_74' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 286 [1/1] (1.56ns)   --->   "%add_ln44_12 = add i3 %zext_ln44_74, i3 %zext_ln44_73" [bitrank.cpp:44]   --->   Operation 286 'add' 'add_ln44_12' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 287 [1/1] (0.00ns)   --->   "%zext_ln44_75 = zext i3 %add_ln44_12" [bitrank.cpp:44]   --->   Operation 287 'zext' 'zext_ln44_75' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 288 [1/1] (1.65ns)   --->   "%add_ln44_13 = add i4 %zext_ln44_75, i4 %zext_ln44_72" [bitrank.cpp:44]   --->   Operation 288 'add' 'add_ln44_13' <Predicate = true> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 289 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_15 = add i2 %zext_ln44_15, i2 %zext_ln44_16" [bitrank.cpp:44]   --->   Operation 289 'add' 'add_ln44_15' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 290 [1/1] (0.00ns)   --->   "%zext_ln44_78 = zext i2 %add_ln44_15" [bitrank.cpp:44]   --->   Operation 290 'zext' 'zext_ln44_78' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 291 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_16 = add i2 %zext_ln44_17, i2 %zext_ln44_18" [bitrank.cpp:44]   --->   Operation 291 'add' 'add_ln44_16' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 292 [1/1] (0.00ns)   --->   "%zext_ln44_79 = zext i2 %add_ln44_16" [bitrank.cpp:44]   --->   Operation 292 'zext' 'zext_ln44_79' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 293 [1/1] (1.56ns)   --->   "%add_ln44_17 = add i3 %zext_ln44_79, i3 %zext_ln44_78" [bitrank.cpp:44]   --->   Operation 293 'add' 'add_ln44_17' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 294 [1/1] (0.00ns)   --->   "%zext_ln44_80 = zext i3 %add_ln44_17" [bitrank.cpp:44]   --->   Operation 294 'zext' 'zext_ln44_80' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 295 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_18 = add i2 %zext_ln44_19, i2 %zext_ln44_20" [bitrank.cpp:44]   --->   Operation 295 'add' 'add_ln44_18' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 296 [1/1] (0.00ns)   --->   "%zext_ln44_81 = zext i2 %add_ln44_18" [bitrank.cpp:44]   --->   Operation 296 'zext' 'zext_ln44_81' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 297 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_19 = add i2 %zext_ln44_21, i2 %zext_ln44_22" [bitrank.cpp:44]   --->   Operation 297 'add' 'add_ln44_19' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 298 [1/1] (0.00ns)   --->   "%zext_ln44_82 = zext i2 %add_ln44_19" [bitrank.cpp:44]   --->   Operation 298 'zext' 'zext_ln44_82' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 299 [1/1] (1.56ns)   --->   "%add_ln44_20 = add i3 %zext_ln44_82, i3 %zext_ln44_81" [bitrank.cpp:44]   --->   Operation 299 'add' 'add_ln44_20' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 300 [1/1] (0.00ns)   --->   "%zext_ln44_83 = zext i3 %add_ln44_20" [bitrank.cpp:44]   --->   Operation 300 'zext' 'zext_ln44_83' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 301 [1/1] (1.65ns)   --->   "%add_ln44_21 = add i4 %zext_ln44_83, i4 %zext_ln44_80" [bitrank.cpp:44]   --->   Operation 301 'add' 'add_ln44_21' <Predicate = true> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 302 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_22 = add i2 %zext_ln44_23, i2 %zext_ln44_24" [bitrank.cpp:44]   --->   Operation 302 'add' 'add_ln44_22' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 303 [1/1] (0.00ns)   --->   "%zext_ln44_85 = zext i2 %add_ln44_22" [bitrank.cpp:44]   --->   Operation 303 'zext' 'zext_ln44_85' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 304 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_23 = add i2 %zext_ln44_25, i2 %zext_ln44_26" [bitrank.cpp:44]   --->   Operation 304 'add' 'add_ln44_23' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 305 [1/1] (0.00ns)   --->   "%zext_ln44_86 = zext i2 %add_ln44_23" [bitrank.cpp:44]   --->   Operation 305 'zext' 'zext_ln44_86' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 306 [1/1] (1.56ns)   --->   "%add_ln44_24 = add i3 %zext_ln44_86, i3 %zext_ln44_85" [bitrank.cpp:44]   --->   Operation 306 'add' 'add_ln44_24' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 307 [1/1] (0.00ns)   --->   "%zext_ln44_87 = zext i3 %add_ln44_24" [bitrank.cpp:44]   --->   Operation 307 'zext' 'zext_ln44_87' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 308 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_25 = add i2 %zext_ln44_27, i2 %zext_ln44_28" [bitrank.cpp:44]   --->   Operation 308 'add' 'add_ln44_25' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 309 [1/1] (0.00ns)   --->   "%zext_ln44_88 = zext i2 %add_ln44_25" [bitrank.cpp:44]   --->   Operation 309 'zext' 'zext_ln44_88' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 310 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_26 = add i2 %zext_ln44_29, i2 %zext_ln44_30" [bitrank.cpp:44]   --->   Operation 310 'add' 'add_ln44_26' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 311 [1/1] (0.00ns)   --->   "%zext_ln44_89 = zext i2 %add_ln44_26" [bitrank.cpp:44]   --->   Operation 311 'zext' 'zext_ln44_89' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 312 [1/1] (1.56ns)   --->   "%add_ln44_27 = add i3 %zext_ln44_89, i3 %zext_ln44_88" [bitrank.cpp:44]   --->   Operation 312 'add' 'add_ln44_27' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 313 [1/1] (0.00ns)   --->   "%zext_ln44_90 = zext i3 %add_ln44_27" [bitrank.cpp:44]   --->   Operation 313 'zext' 'zext_ln44_90' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 314 [1/1] (1.65ns)   --->   "%add_ln44_28 = add i4 %zext_ln44_90, i4 %zext_ln44_87" [bitrank.cpp:44]   --->   Operation 314 'add' 'add_ln44_28' <Predicate = true> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 315 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_31 = add i2 %zext_ln44_31, i2 %zext_ln44_32" [bitrank.cpp:44]   --->   Operation 315 'add' 'add_ln44_31' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 316 [1/1] (0.00ns)   --->   "%zext_ln44_94 = zext i2 %add_ln44_31" [bitrank.cpp:44]   --->   Operation 316 'zext' 'zext_ln44_94' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 317 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_32 = add i2 %zext_ln44_33, i2 %zext_ln44_34" [bitrank.cpp:44]   --->   Operation 317 'add' 'add_ln44_32' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 318 [1/1] (0.00ns)   --->   "%zext_ln44_95 = zext i2 %add_ln44_32" [bitrank.cpp:44]   --->   Operation 318 'zext' 'zext_ln44_95' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 319 [1/1] (1.56ns)   --->   "%add_ln44_33 = add i3 %zext_ln44_95, i3 %zext_ln44_94" [bitrank.cpp:44]   --->   Operation 319 'add' 'add_ln44_33' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 320 [1/1] (0.00ns)   --->   "%zext_ln44_96 = zext i3 %add_ln44_33" [bitrank.cpp:44]   --->   Operation 320 'zext' 'zext_ln44_96' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 321 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_34 = add i2 %zext_ln44_35, i2 %zext_ln44_36" [bitrank.cpp:44]   --->   Operation 321 'add' 'add_ln44_34' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 322 [1/1] (0.00ns)   --->   "%zext_ln44_97 = zext i2 %add_ln44_34" [bitrank.cpp:44]   --->   Operation 322 'zext' 'zext_ln44_97' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 323 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_35 = add i2 %zext_ln44_37, i2 %zext_ln44_38" [bitrank.cpp:44]   --->   Operation 323 'add' 'add_ln44_35' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 324 [1/1] (0.00ns)   --->   "%zext_ln44_98 = zext i2 %add_ln44_35" [bitrank.cpp:44]   --->   Operation 324 'zext' 'zext_ln44_98' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 325 [1/1] (1.56ns)   --->   "%add_ln44_36 = add i3 %zext_ln44_98, i3 %zext_ln44_97" [bitrank.cpp:44]   --->   Operation 325 'add' 'add_ln44_36' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 326 [1/1] (0.00ns)   --->   "%zext_ln44_99 = zext i3 %add_ln44_36" [bitrank.cpp:44]   --->   Operation 326 'zext' 'zext_ln44_99' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 327 [1/1] (1.65ns)   --->   "%add_ln44_37 = add i4 %zext_ln44_99, i4 %zext_ln44_96" [bitrank.cpp:44]   --->   Operation 327 'add' 'add_ln44_37' <Predicate = true> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 328 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_38 = add i2 %zext_ln44_39, i2 %zext_ln44_40" [bitrank.cpp:44]   --->   Operation 328 'add' 'add_ln44_38' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 329 [1/1] (0.00ns)   --->   "%zext_ln44_101 = zext i2 %add_ln44_38" [bitrank.cpp:44]   --->   Operation 329 'zext' 'zext_ln44_101' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 330 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_39 = add i2 %zext_ln44_41, i2 %zext_ln44_42" [bitrank.cpp:44]   --->   Operation 330 'add' 'add_ln44_39' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 331 [1/1] (0.00ns)   --->   "%zext_ln44_102 = zext i2 %add_ln44_39" [bitrank.cpp:44]   --->   Operation 331 'zext' 'zext_ln44_102' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 332 [1/1] (1.56ns)   --->   "%add_ln44_40 = add i3 %zext_ln44_102, i3 %zext_ln44_101" [bitrank.cpp:44]   --->   Operation 332 'add' 'add_ln44_40' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 333 [1/1] (0.00ns)   --->   "%zext_ln44_103 = zext i3 %add_ln44_40" [bitrank.cpp:44]   --->   Operation 333 'zext' 'zext_ln44_103' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 334 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_41 = add i2 %zext_ln44_43, i2 %zext_ln44_44" [bitrank.cpp:44]   --->   Operation 334 'add' 'add_ln44_41' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 335 [1/1] (0.00ns)   --->   "%zext_ln44_104 = zext i2 %add_ln44_41" [bitrank.cpp:44]   --->   Operation 335 'zext' 'zext_ln44_104' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 336 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_42 = add i2 %zext_ln44_45, i2 %zext_ln44_46" [bitrank.cpp:44]   --->   Operation 336 'add' 'add_ln44_42' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 337 [1/1] (0.00ns)   --->   "%zext_ln44_105 = zext i2 %add_ln44_42" [bitrank.cpp:44]   --->   Operation 337 'zext' 'zext_ln44_105' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 338 [1/1] (1.56ns)   --->   "%add_ln44_43 = add i3 %zext_ln44_105, i3 %zext_ln44_104" [bitrank.cpp:44]   --->   Operation 338 'add' 'add_ln44_43' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 339 [1/1] (0.00ns)   --->   "%zext_ln44_106 = zext i3 %add_ln44_43" [bitrank.cpp:44]   --->   Operation 339 'zext' 'zext_ln44_106' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 340 [1/1] (1.65ns)   --->   "%add_ln44_44 = add i4 %zext_ln44_106, i4 %zext_ln44_103" [bitrank.cpp:44]   --->   Operation 340 'add' 'add_ln44_44' <Predicate = true> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 341 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_46 = add i2 %zext_ln44_47, i2 %zext_ln44_48" [bitrank.cpp:44]   --->   Operation 341 'add' 'add_ln44_46' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 342 [1/1] (0.00ns)   --->   "%zext_ln44_109 = zext i2 %add_ln44_46" [bitrank.cpp:44]   --->   Operation 342 'zext' 'zext_ln44_109' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 343 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_47 = add i2 %zext_ln44_49, i2 %zext_ln44_50" [bitrank.cpp:44]   --->   Operation 343 'add' 'add_ln44_47' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 344 [1/1] (0.00ns)   --->   "%zext_ln44_110 = zext i2 %add_ln44_47" [bitrank.cpp:44]   --->   Operation 344 'zext' 'zext_ln44_110' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 345 [1/1] (1.56ns)   --->   "%add_ln44_48 = add i3 %zext_ln44_110, i3 %zext_ln44_109" [bitrank.cpp:44]   --->   Operation 345 'add' 'add_ln44_48' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 346 [1/1] (0.00ns)   --->   "%zext_ln44_111 = zext i3 %add_ln44_48" [bitrank.cpp:44]   --->   Operation 346 'zext' 'zext_ln44_111' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 347 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_49 = add i2 %zext_ln44_51, i2 %zext_ln44_52" [bitrank.cpp:44]   --->   Operation 347 'add' 'add_ln44_49' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 348 [1/1] (0.00ns)   --->   "%zext_ln44_112 = zext i2 %add_ln44_49" [bitrank.cpp:44]   --->   Operation 348 'zext' 'zext_ln44_112' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 349 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_50 = add i2 %zext_ln44_53, i2 %zext_ln44_54" [bitrank.cpp:44]   --->   Operation 349 'add' 'add_ln44_50' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 350 [1/1] (0.00ns)   --->   "%zext_ln44_113 = zext i2 %add_ln44_50" [bitrank.cpp:44]   --->   Operation 350 'zext' 'zext_ln44_113' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 351 [1/1] (1.56ns)   --->   "%add_ln44_51 = add i3 %zext_ln44_113, i3 %zext_ln44_112" [bitrank.cpp:44]   --->   Operation 351 'add' 'add_ln44_51' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 352 [1/1] (0.00ns)   --->   "%zext_ln44_114 = zext i3 %add_ln44_51" [bitrank.cpp:44]   --->   Operation 352 'zext' 'zext_ln44_114' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 353 [1/1] (1.65ns)   --->   "%add_ln44_52 = add i4 %zext_ln44_114, i4 %zext_ln44_111" [bitrank.cpp:44]   --->   Operation 353 'add' 'add_ln44_52' <Predicate = true> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 354 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_53 = add i2 %zext_ln44_55, i2 %zext_ln44_56" [bitrank.cpp:44]   --->   Operation 354 'add' 'add_ln44_53' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 355 [1/1] (0.00ns)   --->   "%zext_ln44_116 = zext i2 %add_ln44_53" [bitrank.cpp:44]   --->   Operation 355 'zext' 'zext_ln44_116' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 356 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_54 = add i2 %zext_ln44_57, i2 %zext_ln44_58" [bitrank.cpp:44]   --->   Operation 356 'add' 'add_ln44_54' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 357 [1/1] (0.00ns)   --->   "%zext_ln44_117 = zext i2 %add_ln44_54" [bitrank.cpp:44]   --->   Operation 357 'zext' 'zext_ln44_117' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 358 [1/1] (1.56ns)   --->   "%add_ln44_55 = add i3 %zext_ln44_117, i3 %zext_ln44_116" [bitrank.cpp:44]   --->   Operation 358 'add' 'add_ln44_55' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 359 [1/1] (0.00ns)   --->   "%zext_ln44_118 = zext i3 %add_ln44_55" [bitrank.cpp:44]   --->   Operation 359 'zext' 'zext_ln44_118' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 360 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_56 = add i2 %zext_ln44_59, i2 %zext_ln44_60" [bitrank.cpp:44]   --->   Operation 360 'add' 'add_ln44_56' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 361 [1/1] (0.00ns)   --->   "%zext_ln44_119 = zext i2 %add_ln44_56" [bitrank.cpp:44]   --->   Operation 361 'zext' 'zext_ln44_119' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 362 [1/1] (1.56ns) (out node of the LUT)   --->   "%add_ln44_57 = add i2 %zext_ln44_61, i2 %zext_ln44_62" [bitrank.cpp:44]   --->   Operation 362 'add' 'add_ln44_57' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 363 [1/1] (0.00ns)   --->   "%zext_ln44_120 = zext i2 %add_ln44_57" [bitrank.cpp:44]   --->   Operation 363 'zext' 'zext_ln44_120' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 364 [1/1] (1.56ns)   --->   "%add_ln44_58 = add i3 %zext_ln44_120, i3 %zext_ln44_119" [bitrank.cpp:44]   --->   Operation 364 'add' 'add_ln44_58' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 365 [1/1] (0.00ns)   --->   "%zext_ln44_121 = zext i3 %add_ln44_58" [bitrank.cpp:44]   --->   Operation 365 'zext' 'zext_ln44_121' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 366 [1/1] (1.65ns)   --->   "%add_ln44_59 = add i4 %zext_ln44_121, i4 %zext_ln44_118" [bitrank.cpp:44]   --->   Operation 366 'add' 'add_ln44_59' <Predicate = true> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 5.34>
ST_2 : Operation 367 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i7 0"   --->   Operation 367 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 368 [1/1] (0.00ns)   --->   "%spectopmodule_ln40 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [bitrank.cpp:40]   --->   Operation 368 'spectopmodule' 'spectopmodule_ln40' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 369 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %p_val"   --->   Operation 369 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 370 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %p_val, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 370 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 371 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i6 %pos_r"   --->   Operation 371 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 372 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i6 %pos_r, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 372 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 373 [1/1] (0.00ns)   --->   "%zext_ln44_69 = zext i4 %add_ln44_6" [bitrank.cpp:44]   --->   Operation 373 'zext' 'zext_ln44_69' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 374 [1/1] (0.00ns)   --->   "%zext_ln44_76 = zext i4 %add_ln44_13" [bitrank.cpp:44]   --->   Operation 374 'zext' 'zext_ln44_76' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 375 [1/1] (1.73ns)   --->   "%add_ln44_14 = add i5 %zext_ln44_76, i5 %zext_ln44_69" [bitrank.cpp:44]   --->   Operation 375 'add' 'add_ln44_14' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 376 [1/1] (0.00ns)   --->   "%zext_ln44_77 = zext i5 %add_ln44_14" [bitrank.cpp:44]   --->   Operation 376 'zext' 'zext_ln44_77' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 377 [1/1] (0.00ns)   --->   "%zext_ln44_84 = zext i4 %add_ln44_21" [bitrank.cpp:44]   --->   Operation 377 'zext' 'zext_ln44_84' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 378 [1/1] (0.00ns)   --->   "%zext_ln44_91 = zext i4 %add_ln44_28" [bitrank.cpp:44]   --->   Operation 378 'zext' 'zext_ln44_91' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 379 [1/1] (1.73ns)   --->   "%add_ln44_29 = add i5 %zext_ln44_91, i5 %zext_ln44_84" [bitrank.cpp:44]   --->   Operation 379 'add' 'add_ln44_29' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 380 [1/1] (0.00ns)   --->   "%zext_ln44_92 = zext i5 %add_ln44_29" [bitrank.cpp:44]   --->   Operation 380 'zext' 'zext_ln44_92' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 381 [1/1] (1.78ns)   --->   "%add_ln44_30 = add i6 %zext_ln44_92, i6 %zext_ln44_77" [bitrank.cpp:44]   --->   Operation 381 'add' 'add_ln44_30' <Predicate = true> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 382 [1/1] (0.00ns)   --->   "%zext_ln44_93 = zext i6 %add_ln44_30" [bitrank.cpp:44]   --->   Operation 382 'zext' 'zext_ln44_93' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 383 [1/1] (0.00ns)   --->   "%zext_ln44_100 = zext i4 %add_ln44_37" [bitrank.cpp:44]   --->   Operation 383 'zext' 'zext_ln44_100' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 384 [1/1] (0.00ns)   --->   "%zext_ln44_107 = zext i4 %add_ln44_44" [bitrank.cpp:44]   --->   Operation 384 'zext' 'zext_ln44_107' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 385 [1/1] (1.73ns)   --->   "%add_ln44_45 = add i5 %zext_ln44_107, i5 %zext_ln44_100" [bitrank.cpp:44]   --->   Operation 385 'add' 'add_ln44_45' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 386 [1/1] (0.00ns)   --->   "%zext_ln44_108 = zext i5 %add_ln44_45" [bitrank.cpp:44]   --->   Operation 386 'zext' 'zext_ln44_108' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 387 [1/1] (0.00ns)   --->   "%zext_ln44_115 = zext i4 %add_ln44_52" [bitrank.cpp:44]   --->   Operation 387 'zext' 'zext_ln44_115' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 388 [1/1] (0.00ns)   --->   "%zext_ln44_122 = zext i4 %add_ln44_59" [bitrank.cpp:44]   --->   Operation 388 'zext' 'zext_ln44_122' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 389 [1/1] (1.73ns)   --->   "%add_ln44_60 = add i5 %zext_ln44_122, i5 %zext_ln44_115" [bitrank.cpp:44]   --->   Operation 389 'add' 'add_ln44_60' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 390 [1/1] (0.00ns)   --->   "%zext_ln44_123 = zext i5 %add_ln44_60" [bitrank.cpp:44]   --->   Operation 390 'zext' 'zext_ln44_123' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 391 [1/1] (1.78ns)   --->   "%add_ln44_61 = add i6 %zext_ln44_123, i6 %zext_ln44_108" [bitrank.cpp:44]   --->   Operation 391 'add' 'add_ln44_61' <Predicate = true> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 392 [1/1] (0.00ns)   --->   "%zext_ln44_124 = zext i6 %add_ln44_61" [bitrank.cpp:44]   --->   Operation 392 'zext' 'zext_ln44_124' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 393 [1/1] (1.82ns)   --->   "%count_1 = add i7 %zext_ln44_124, i7 %zext_ln44_93" [bitrank.cpp:44]   --->   Operation 393 'add' 'count_1' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 394 [1/1] (0.00ns)   --->   "%ret_ln46 = ret i7 %count_1" [bitrank.cpp:46]   --->   Operation 394 'ret' 'ret_ln46' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 6.605ns
The critical path consists of the following:
	wire read operation ('pos_r_read') on port 'pos_r' [3]  (0.000 ns)
	'icmp' operation ('icmp_ln44_2', bitrank.cpp:44) [22]  (1.825 ns)
	'and' operation ('and_ln44_2', bitrank.cpp:44) [24]  (0.000 ns)
	'add' operation ('add_ln44_1', bitrank.cpp:44) [271]  (1.565 ns)
	'add' operation ('add_ln44_2', bitrank.cpp:44) [273]  (1.565 ns)
	'add' operation ('add_ln44_6', bitrank.cpp:44) [281]  (1.650 ns)

 <State 2>: 5.340ns
The critical path consists of the following:
	'add' operation ('add_ln44_14', bitrank.cpp:44) [297]  (1.735 ns)
	'add' operation ('add_ln44_30', bitrank.cpp:44) [329]  (1.780 ns)
	'add' operation ('count', bitrank.cpp:44) [393]  (1.825 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
